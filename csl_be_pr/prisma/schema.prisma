// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id                  Int @default(autoincrement()) @id

  name                String @unique
  email               String @unique
  password            String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  isDeleted           Deleted @default(FALSE)

  packages            Package[]
  packageEdits        PackageEdit[]
}

enum Deleted{
  TRUE
  FALSE
}

enum Status{
  ON_HOLD
  EN_ROUTE
  ARRIVED
  DELIVERED
}

model Package{
  id                  Int @default(autoincrement()) @id

  trackingNumber      String @unique
  customer            String
  cbm                 Float
  email               String?
  phone               String?
  package             String?
  quantity            Int
  vessel              String
  
  loaded              DateTime
  eta                 DateTime
  received            DateTime
  
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  isDeleted           Deleted @default(FALSE)

  status              Status

  addedBy              Int
  user                User @relation(fields: [addedBy], references: [id])

  edits               PackageEdit[]
}

model PackageEdit{
  id                  Int @default(autoincrement()) @id
  description         String

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  editedBy            Int
  user                User @relation(fields: [editedBy], references: [id])

  editedPackage       Int
  package             Package @relation(fields: [editedPackage], references: [id])
}
